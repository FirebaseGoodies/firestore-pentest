import { Component, OnInit } from '@angular/core';
import { DatabaseConfigSample, DatabaseConfig } from 'src/app/models/database-config.model';
import { Setup } from 'src/app/models/setup.model';
import { SetupService } from 'src/app/services/setup.service';
import { parseDatabaseConfig, isDatabaseConfigValid } from 'src/app/validators/database-config.validator';
import { stringify } from 'src/app/helpers/parser.helper';

@Component({
  selector: 'app-setup',
  templateUrl: './setup.component.html',
  styleUrls: ['./setup.component.scss']
})
export class SetupComponent implements OnInit {

  setup: Setup = new Setup();
  readonly databaseConfigSample: string = DatabaseConfigSample;
  disableStartButton: boolean = false;

  constructor(
    private setupService: SetupService
  ) { }

  ngOnInit(): void {
    const setup: Setup = this.setupService.get();
    if (setup) {
      this.setup = {...this.setup, ...setup};
      if (this.setup.databaseConfig) {
        this.setup.databaseConfig = stringify(this.setup.databaseConfig as any) as any;
      }
    }
    (this.setup.authentication.emailAndPassword as any).isPasswordVisible = false;
  }

  start(): void {
    this.disableStartButton = true;
    const setup: Setup = {...this.setup}; // Clone setup object (for modification)
    // Remove unwanted data
    delete (setup.authentication.emailAndPassword as any).isPasswordVisible;
    // Parse database config
    const config: DatabaseConfig = parseDatabaseConfig(setup.databaseConfig as any);
    if (isDatabaseConfigValid(config)) {
      setup.databaseConfig = config;
      // Save setup
      this.setupService.save(setup);
      // Start
      window.open('./start', '_self');
    } else {
      this.disableStartButton = false;
    }
  }

}
